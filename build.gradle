plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'

}

group = 'com.imgix'
version = '2.3.0'
archivesBaseName = "Imgix Java Client"

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
}

// This is new, this prepares the project for Gradle 7.0 (currently on 6.3)
dependencies {
    testImplementation group: 'junit', name: 'junit', version:'4.12'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version:'1.3'
}

// `classifier = 'sources'` is a deprecated feature--removed!
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

// `classifier = 'javadoc'` is a deprecated feature--removed!
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

task testUTF32(type: Test) {
    jvmArgs "-Dfile.encoding=UTF-32"
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    if (project.hasProperty('signing.keyId') &&
        project.hasProperty('signing.password') &&
        project.hasProperty('signing.secretKeyRingFile')) {
        sign configurations.archives

        /* Uncomment this if you use shadow in your build process */
        // sign configurations.shadow
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Imgix Java Client'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'imgix-java is a client library for generating image URLs with imgix.'
                url 'https://github.com/imgix/imgix-java'

                scm {
                    connection 'https://github.com/imgix/imgix-java.git'
                    developerConnection 'https://github.com/imgix/imgix-java.git'
                    url 'https://github.com/imgix/imgix-java'
                }

                licenses {
                    license {
                        name 'BSD-2-Clause License'
                        url 'https://github.com/imgix/imgix-java/blob/main/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'imgix'
                        name 'imgix'
                        email 'sdk@imgix.com'
                    }
                }
            }
        }
    }
}
